import analysis.metric_space algebra.module inner_product_spaces.basic
universes u v
variables V W : Type

section norm_space

-- Banach space is a complete normed space.
class banach_space (V : Type) extends norm_space V: Type :=
(complete: complete_space ℝ)

variables (v : Type) [norm_space V]
def norm : V → ℝ := norm_space.N

-- Incorrect, working on it atm
lemma banach_is_metric [banach_space V] : metric_space V :=
{
dist := norm, 
dist_self := 
    begin
    intros, 
    dunfold herm_dist,
    dunfold herm_norm,
    simp,
    end,
eq_of_dist_eq_zero :=
    begin
    dunfold herm_dist,
    dunfold herm_norm,
    intros x y H,
    rw sqrt_eq_zero (is_pos_def (x - y)).left at H,
    rw ←zero_re at H,
    have H1 : (x - y) ∘ (x - y) = 0,
        exact im_re_eq_imp_eq H (in_self_real (x - y)),
    rw (is_pos_def (x - y)).right at H1,
    exact sub_eq_zero.mp H1,
    end,
dist_comm := 
    begin
    intros,
    dunfold herm_dist, 
    dunfold herm_norm,
    rw sqrt_inj (is_pos_def (x - y)).left (is_pos_def (y - x)).left,
    simp, 
    end,
dist_triangle := 
    begin 
    dunfold herm_dist,
    intros,
    have H : x - z = (x - y) + (y - z),
        simp,
    rw H, 
    exact norm_sub_add (x - y) (y - z),
    end,
}

end norm_space
-- theorem completion 
